volumes:
  mysql-data:
networks:
  spring-boot-mysql-network:
    name: spring-boot-mysql-network
services:
  mysqldb:
    image: mysql:latest
    ports:
      - "3308:3306"
    environment:
      - MYSQL_DATABASE=customersdb
      - MYSQL_USER=myuser
      - MYSQL_PASSWORD=mypassword
      - MYSQL_ROOT_PASSWORD=myroot
    networks:
      - spring-boot-mysql-network
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      retries: 5
      interval: 3s
      timeout: 30s
  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Expose Redis on default port
    networks:
      - spring-boot-mysql-network
  my-prometheus:
    image: prom/prometheus
    container_name: my-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - spring-boot-mysql-network
    ## Tempo
  my-tempo:
    image: grafana/tempo
    container_name: my-tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3200:3200" # Tempo
      - "9411:9411" # zipkin
    networks:
      - spring-boot-mysql-network
  my-loki:
    image: grafana/loki:main
    container_name: my-loki
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    ports:
      - "3100:3100"
    networks:
      - spring-boot-mysql-network
  my-grafana:
    image: grafana/grafana
    container_name: my-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./docker/grafana:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    networks:
      - spring-boot-mysql-network
  myapp:
    build: .
    ports:
      - "8080:8081"
    depends_on:
      mysqldb:
        condition: service_healthy
      my-tempo:
        condition: service_started
      my-loki:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/customersdb
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword
      - SPRING_CACHE_TYPE=redis  # Set caching type to Redis
      - SPRING_REDIS_HOST=redis  # Set Redis host to the service name
      - SPRING_REDIS_PORT=6379  # Set Redis port
    networks:
      - spring-boot-mysql-network